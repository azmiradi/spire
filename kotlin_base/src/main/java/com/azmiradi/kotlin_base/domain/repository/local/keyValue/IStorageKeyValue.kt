package com.azmiradi.kotlin_base.domain.repository.local.keyValue

import java.lang.reflect.Type


abstract class IStorageKeyValue {
    /**
     * Get secured value is used to decrypt the data after extracting it from local storage using cryptographic key generated by keyAlias.
     *
     * @param storageKey the key which holds the encrypted value.
     * @param keyAlias the value used to get/create crypto key and use it to encrypt the date.
     * @return the encrypted value.
     */
    open suspend fun getSecuredValue(storageKey: StorageKey, keyAlias: String): ByteArray =
        throw NotImplementedError("override and implement this method")

    /**
     * Set secured value is used to encrypt any value before storing in local storage using cryptographic key generated by keyAlias.
     *
     * @param storageKey the key which holds the encrypted value.
     * @param keyAlias the value used to get/create crypto key and use it to encrypt the date.
     */
    open suspend fun saveSecuredValue(storageKey: StorageKey, keyAlias: String, value: ByteArray) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun getString(storageKey: StorageKey): String =
        throw NotImplementedError("override and implement this method")

    open suspend fun saveString(storageKey: StorageKey, value: String) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun clearString(storageKey: StorageKey) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun getInt(storageKey: StorageKey): Int? {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun saveInt(storageKey: StorageKey, value: Int) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun clearInt(storageKey: StorageKey) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun getBoolean(storageKey: StorageKey): Boolean? =
        throw NotImplementedError("override and implement this method")

    open suspend fun saveBoolean(storageKey: StorageKey, value: Boolean) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun <Model> getModelBasedOnType(storageKey: StorageKey, tokenType: Type): Model? =
        throw NotImplementedError("override and implement this method")

    open suspend fun <Model> saveModelBasedOnType(storageKey: StorageKey, value: Model) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun hasKey(storageKey: StorageKey): Boolean =
        throw NotImplementedError("override and implement this method")

    open suspend fun clearAllEntries() {
        throw NotImplementedError("override and implement this method")
    }
}