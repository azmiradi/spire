package com.azmiradi.kotlin_base.domain.repository.local.keyValue

import java.lang.reflect.Type
import java.util.Date


abstract class IStorageKeyValue {
    /**
     * Get secured value is used to decrypt the data after extracting it from local storage using cryptographic key generated by keyAlias.
     *
     * @param storageKey the key which holds the encrypted value.
     * @param keyAlias the value used to get/create crypto key and use it to encrypt the date.
     * @return the encrypted value.
     */
    open suspend fun getSecuredValue(
        storageKey: IKeyValue,
        keyAlias: IKeyValue,
    ): ByteArray =
        throw NotImplementedError("override and implement this method")

    /**
     * Set secured value is used to encrypt any value before storing in local storage using cryptographic key generated by keyAlias.
     *
     * @param storageKey the key which holds the encrypted value.
     * @param keyAlias the value used to get/create crypto key and use it to encrypt the date.
     */
    open suspend fun saveSecuredValue(
        storageKey: IKeyValue,
        keyAlias: IKeyValue,
        value: ByteArray,
        authenticationRequired: Boolean = false,
        keyValidityEnd: Date? = null,
    ) {
        throw NotImplementedError("override and implement this method")
    }


    open suspend fun getString(storageKey: IKeyValue): String =
        throw NotImplementedError("override and implement this method")

    open suspend fun saveString(storageKey: IKeyValue, value: String) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun clearString(storageKey: IKeyValue) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun getInt(storageKey: IKeyValue): Int? {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun saveInt(storageKey: IKeyValue, value: Int) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun clearInt(storageKey: IKeyValue) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun getBoolean(storageKey: IKeyValue): Boolean? =
        throw NotImplementedError("override and implement this method")

    open suspend fun saveBoolean(storageKey: IKeyValue, value: Boolean) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun <Model> getModelBasedOnType(storageKey: IKeyValue, tokenType: Type): Model? =
        throw NotImplementedError("override and implement this method")

    open suspend fun <Model> saveModelBasedOnType(storageKey: IKeyValue, value: Model) {
        throw NotImplementedError("override and implement this method")
    }

    open suspend fun hasKey(storageKey: IKeyValue): Boolean =
        throw NotImplementedError("override and implement this method")

    open suspend fun clearAllEntries() {
        throw NotImplementedError("override and implement this method")
    }
}